(()=>{"use strict";const t=t=>{const e=t;let s=[];(()=>{for(let t=0;t<e;t++)s.push("")})();const a=()=>s.every((t=>"hit"===t));return{length:e,hitSpots:s,hit:t=>{s[t]="hit",a()},isSunk:a}},e=()=>{const e=[];let s="horizontal";const a=[],n=[];let i=[];const r=(t,e)=>i.some((s=>t.includes(s[0])&&e.includes(s[1])));return{place:(a,n,o)=>{if("horizontal"==s){const s=t(a),c=[],l=[];return(()=>{for(let t=0;t<s.length;t++)c.push(n+t);l.push(o)})(),r(c,l)||n+a>10?"failed":(e.push({locationsH:c,locationsV:l,newShip:s}),i.push([n-1,o]),i.push([n+a,o]),c.forEach((t=>{i.push([t,l[0]])})),c.forEach((t=>{i.push([t,l[0]-1])})),c.forEach((t=>{i.push([t,l[0]+1])})),"placed")}if("vertical"==s){const s=t(a),c=[],l=[];return(()=>{c.push(n);for(let t=0;t<s.length;t++)l.push(o+t)})(),r(c,l)||o+a>10?"failed":(e.push({locationsH:c,locationsV:l,newShip:s}),i.push([n,o-1]),i.push([n,o+a]),l.forEach((t=>{i.push([c[0],t])})),l.forEach((t=>{i.push([c[0]-1,t])})),l.forEach((t=>{i.push([c[0]+1,t])})),"placed")}},change:function(){return"vertical"!=s?(s="vertical","vertical"):(s="horizontal","horizontal")},receiveAttack:(t,s)=>{let i,r;return i=e.find((e=>e.locationsH.includes(t)&&e.locationsV.includes(s))),null==i?(n.push([t,s]),a.push([t,s]),"miss"):1==i.locationsV.length?(r=i.locationsH.findIndex((e=>e==t)),i.newShip.hit(r),n.push([t,s]),"hit"):(r=i.locationsV.findIndex((t=>t==s)),i.newShip.hit(r),n.push([t,s]),"hit")},allSunk:()=>!(!e.every((t=>t.newShip.isSunk()))||!e[0]),checkCollision:r,shot:a,missed:n,ships:e,arrangement:s,occupied:i}};function s(t){const e=Array.from(document.querySelectorAll(".player-board > .cell"));t.gameboard.ships.forEach((t=>{const s=t.locationsH,a=t.locationsV,n=e.filter((t=>s.includes(parseInt(t.attributes[1].value))&&a.includes(parseInt(t.attributes[2].value))));n.forEach((t=>t.classList.add("occupied"))),t.newShip.isSunk()&&n.forEach((t=>t.classList.add("down")))}))}const a={turn:(t,e,s)=>t.gameboard.receiveAttack(e,s),gameboard:e()};e(),(()=>{const t=document.querySelector(".player-board"),e=document.querySelector(".computer-board");for(let s=0;s<10;s++)for(let a=0;a<10;a++){const n=document.createElement("div"),i=document.createElement("div");n.classList.add("cell"),n.setAttribute("x",a),n.setAttribute("y",s),t.appendChild(n),i.classList.add("cell"),i.setAttribute("x",a),i.setAttribute("y",s),e.appendChild(i)}})(),a.gameboard.place(4,3,3),s(a),function(t){const e=Array.from(document.querySelectorAll(".player-board > .cell")),a=document.querySelector(".vs");let n=0;function i(e){e.preventDefault();const s=parseInt(this.getAttribute("x")),a=parseInt(this.getAttribute("y"));0==t.gameboard.checkCollision([s],[a])?this.classList.add("valid"):this.classList.add("invalid")}function r(t){this.classList.remove("valid","invalid")}function o(e){this.classList.remove("valid","invalid");const a=parseInt(this.getAttribute("x")),i=parseInt(this.getAttribute("y")),r=t.gameboard.checkCollision([a],[i]),o=parseInt(e.dataTransfer.getData("text/plain"));0==r&&1==o&&n<4?(t.gameboard.place(o,a,i),n++):1==o&&4==n&&console.log("cant't place more than 4   very small ships!"),s(t)}a.addEventListener("dragstart",(function(t){t.dataTransfer.setData("text/plain",this.getAttribute("length"))})),e.forEach((t=>{t.addEventListener("dragenter",i)})),e.forEach((t=>{t.addEventListener("dragleave",r)})),e.forEach((t=>{t.addEventListener("dragover",(t=>{t.preventDefault()}))})),e.forEach((t=>{t.addEventListener("drop",o)}))}(a)})();