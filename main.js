(()=>{"use strict";const t=t=>{const e=t;let a=[];(()=>{for(let t=0;t<e;t++)a.push("")})();const o=()=>a.every((t=>"hit"===t));return{length:e,hitSpots:a,hit:t=>{a[t]="hit",o()},isSunk:o}},e=()=>{const e=[];let a="horizontal";const o=[],r=[];let s=[],c=[];const l=(t,e)=>t.every((t=>e.includes(t)));return{place:(o,r,n)=>{if("horizontal"==a){const a=t(o),i=[],u=[];if((()=>{for(let t=0;t<a.length;t++)i.push(r+t);u.push(n)})(),l(i,s)&&l(u,c))return;i.forEach((t=>s.push(t))),u.forEach((t=>c.push(t))),e.push({locationsH:i,locationsV:u,newShip:a})}else if("vertical"==a){const a=t(o),i=[],u=[];if((()=>{i.push(r);for(let t=0;t<a.length;t++)u.push(n+t)})(),l(i,s)&&l(u,c))return;i.forEach((t=>s.push(t))),u.forEach((t=>c.push(t))),e.push({locationsH:i,locationsV:u,newShip:a})}},change:()=>{a="vertical"!=a?"vertical":"horizontal"},receiveAttack:(t,a)=>{let s,c;return s=e.find((e=>e.locationsH.includes(t)&&e.locationsV.includes(a))),null==s?(r.push([t,a]),o.push([t,a]),"miss"):1==s.locationsV.length?(c=s.locationsH.findIndex((e=>e==t)),s.newShip.hit(c),r.push([t,a]),"hit"):(c=s.locationsV.findIndex((t=>t==a)),s.newShip.hit(c),r.push([t,a]),"hit")},allSunk:()=>!!e.every((t=>t.newShip.isSunk())),shot:o,missed:r,ships:e,arrangement:a}};(()=>{(()=>{const t=document.querySelector(".player-board"),e=document.querySelector(".computer-board");for(let a=0;a<10;a++)for(let o=0;o<10;o++){const r=document.createElement("div"),s=document.createElement("div");r.classList.add("cell"),r.setAttribute("x",o),r.setAttribute("y",a),t.appendChild(r),s.classList.add("cell"),s.setAttribute("x",o),s.setAttribute("y",a),e.appendChild(s)}})();const t={turn:(t,e,a)=>t.gameboard.receiveAttack(e,a),gameboard:e()},a={turn:t=>{let e=Math.floor(10*Math.random()),a=Math.floor(10*Math.random());const o=t=>t[0]==e&&t[1]==a;for(;t.gameboard.shot.some(o);)e=Math.floor(10*Math.random()),a=Math.floor(10*Math.random());return[t.gameboard.receiveAttack(e,a),e,a]},gameboard:e()};var o,r;t.gameboard.place(2,3,3),a.gameboard.place(2,3,3),function(t){const e=Array.from(document.querySelectorAll(".player-board > .cell"));t.gameboard.ships.forEach((t=>{const a=t.locationsH,o=t.locationsV,r=e.filter((t=>a.includes(parseInt(t.attributes[1].value))&&o.includes(parseInt(t.attributes[2].value))));r.forEach((t=>t.classList.add("occupied")))}))}(t),function(t){const e=Array.from(document.querySelectorAll(".computer-board > .cell"));t.gameboard.ships.forEach((t=>{const a=t.locationsH,o=t.locationsV,r=e.filter((t=>a.includes(parseInt(t.attributes[1].value))&&o.includes(parseInt(t.attributes[2].value))));r.forEach((t=>t.classList.add("occupied")))}))}(a),o=t,r=a,document.querySelectorAll(".computer-board > .cell").forEach((t=>{t.addEventListener("click",(t=>{const e=parseInt(t.target.getAttribute("x")),a=parseInt(t.target.getAttribute("y"));"hit"==o.turn(r,e,a)?t.target.classList.add("hit"):t.target.classList.add("miss")}))})),((t,e)=>{const a=Array.from(document.querySelectorAll(".player-board > .cell")),o=t.turn(e);console.log(o);const r=a.find((t=>t.attributes[1].value==o[1]&&t.attributes[2].value==o[2]));"miss"==o[0]?r.classList.add("miss"):"hit"==o[0]&&r.classList.add("hit")})(a,t)})()})();